{"mappings":"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","sources":["Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/Disposable.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/array.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/functions.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/util.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/has.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/AssertionError.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/asserts.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/transform.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/extent/Corner.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/extent/Relationship.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/extent.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/math.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/color.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/style/IconImageCache.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/events/Event.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/ObjectEventType.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/obj.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/events/Target.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/events/EventType.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/events.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/Observable.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/Object.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/layer/Property.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/layer/Base.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/render/EventType.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/source/State.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/layer/Layer.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/coordinate.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/renderer/Map.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/render/Event.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/css.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/dom.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/render/canvas.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/renderer/Composite.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/CollectionEventType.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/Collection.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/layer/Group.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/MapEvent.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/MapBrowserEvent.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/MapBrowserEventType.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/pointer/EventType.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/MapBrowserEventHandler.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/MapEventType.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/MapProperty.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/structs/PriorityQueue.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/TileState.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/TileQueue.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/GeometryType.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/proj/Units.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/ViewHint.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/ViewProperty.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/proj/Projection.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/proj/epsg3857.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/proj/epsg4326.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/proj/projections.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/proj/transforms.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/sphere.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/proj.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/centerconstraint.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/resolutionconstraint.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/rotationconstraint.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/easing.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/GeometryLayout.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/flat/transform.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/Geometry.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/SimpleGeometry.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/flat/closest.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/flat/deflate.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/flat/simplify.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/flat/inflate.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/flat/area.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/LinearRing.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/Point.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/flat/contains.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/flat/interiorpoint.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/flat/intersectsextent.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/flat/segments.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/flat/reverse.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/flat/orient.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/geom/Polygon.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/View.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/tilegrid/common.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/size.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/PluggableMap.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/control/Control.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/control/Attribution.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/control/Rotate.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/control/Zoom.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/interaction/Property.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/interaction/Interaction.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/interaction/DoubleClickZoom.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/interaction/Pointer.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/events/condition.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/interaction/DragPan.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/interaction/DragRotate.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/render/Box.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/interaction/DragBox.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/interaction/DragZoom.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/events/KeyCode.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/interaction/KeyboardPan.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/interaction/KeyboardZoom.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/Kinetic.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/interaction/MouseWheelZoom.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/interaction/PinchRotate.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/interaction/PinchZoom.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/Map.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/control.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/interaction.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/layer/TileProperty.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/layer/BaseTile.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/ImageState.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/renderer/Layer.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/renderer/canvas/Layer.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/Tile.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/ImageBase.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/Image.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/ImageTile.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/reproj/common.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/reproj.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/reproj/Triangulation.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/renderer/canvas/common.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/reproj/Tile.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/TileRange.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/renderer/canvas/TileLayer.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/layer/Tile.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/structs/LRUCache.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/tilecoord.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/TileCache.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/source/TileEventType.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/source/Source.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/tilegrid/TileGrid.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/tilegrid.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/source/Tile.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/tileurlfunction.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/source/UrlTile.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/source/TileImage.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/source/XYZ.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/source/OSM.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/source/common.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/source/WMSServerType.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/uri.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/source/TileWMS.js","Documents/GitHub/openlayers-examples/other-projection/node_modules/ol/src/string.js","Documents/GitHub/openlayers-examples/other-projection/src/js/index.js"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n  setBackground(opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/Source.js\").default|undefined} source Source being rendered (only for multi-source layers).\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != SourceState.READY &&\n          sourceState != SourceState.UNDEFINED)\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [opt_disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(opt_disable) {\n  const hide = opt_disable === undefined ? true : opt_disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n      const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (opt_isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\n   * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\n   *\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: In maps with more than one layer, this method will typically return pixel data\n   * representing the composed image of all layers visible at the given pixel – because layers\n   * will generally share the same rendering context.  To force layers to render separately, and\n   * to get pixel data representing only one layer at a time, you can assign each layer a unique\n   * `className` in its constructor.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   * @deprecated\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      if (!layer.getRenderer().ready) {\n        return true;\n      }\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      this.renderComplete_\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../PluggableMap.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   * @param {string} [opt_backgroundColor] Background color.\n   */\n  useContainer(target, transform, opacity, opt_backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      target.style.opacity === '' &&\n      opacity === 1 &&\n      (!opt_backgroundColor ||\n        (target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(opt_backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      if (opt_backgroundColor) {\n        style.backgroundColor = opt_backgroundColor;\n      }\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    const x = Math.round(renderPixel[0]);\n    const y = Math.round(renderPixel[1]);\n    let pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      const pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    let data;\n    try {\n      pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        this.pixelContext_ = null;\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './renderer/canvas/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n\n  if (!opt_interpolate) {\n    assign(context, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!opt_interpolate) {\n    assign(stitchContext, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !opt_interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/renderer/canvas/common\n */\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n\n/**\n * Context options to enable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_ENABLED = {\n  imageSmoothingEnabled: true,\n  msImageSmoothingEnabled: true,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!opt_interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      return this.getImageData(tile.getImage(), col, row);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  /**\n   * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n   * @api\n   */\n  CARMENTA_SERVER: 'carmentaserver',\n  /**\n   * HiDPI support for [GeoServer](https://geoserver.org/)\n   * @api\n   */\n  GEOSERVER: 'geoserver',\n  /**\n   * HiDPI support for [MapServer](https://mapserver.org/)\n   * @api\n   */\n  MAPSERVER: 'mapserver',\n  /**\n   * HiDPI support for [QGIS](https://qgis.org/)\n   * @api\n   */\n  QGIS: 'qgis',\n};\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [opt_options] Tile WMS options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : /** @type {Options} */ ({});\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const params = options.params || {};\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ =\n      /** @type {import(\"./WMSServerType.js\").default|undefined} */ (\n        options.serverType\n      );\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport TileWMS from 'ol/source/TileWMS';\n\n\n//define the layers, including the basemap and a HMC HGL map\nconst layers = [\n  new TileLayer({\n    source: new OSM()\n  }),\n  new TileLayer({\n    source: new TileWMS({\n      projection: 'EPSG:32618',\n      url: 'https://geodata-proxy.lib.harvard.edu/geoserver/proxy/requestfile/wms',\n      attributions:\n        'Harvard Map Collection',\n      params: {\n        'LAYERS': 'mapimages_public:G3801_G46_1790_D4_1849',\n      },\n    }),\n  }),\n];\n\n\n//initialize the map\nconst map = new Map({\n  layers: layers,\n  target: 'map',\n  view: new View({\n    center: [-8313419.924689821,5270000.419856723],\n    zoom: 11\n  })\n});\n\n\n//function to get the current extent and zoom level \nfunction getBounds() {\n    const currentCenter = map.getView().getCenter() \n    const currentZoom = map.getView().getZoom()\n    return \"Center: \" + currentCenter + \"\\nZoom:\" +  currentZoom\n  }\n\n//print current zoom level on drag\nmap.on('moveend', function (e) {\n    console.log(getBounds())\n});"],"names":["$634c45ec330431c9$export$2e2bcd8739ae039","Disposable","this","disposed","prototype","dispose","disposeInternal","$946dae0bcdc6b81d$export$4e734a3b32fb971b","a","b","$946dae0bcdc6b81d$export$8a3786cc03fdb777","arr","target","direction","n","length","i","$946dae0bcdc6b81d$export$8b58be045bf06082","data","extension","Array","isArray","$946dae0bcdc6b81d$export$e9bab7fafb253603","arr1","arr2","len1","$2369dfa594304115$export$22e23a2304399231","$2369dfa594304115$export$8f11cee4bdc7e668","$2369dfa594304115$export$1cd1943b3a73bbe8","$bfb1c11274f03e1e$export$817eb92a8194bab0","Error","$bfb1c11274f03e1e$var$uidCounter_","$bfb1c11274f03e1e$export$5e82334337e0f204","obj","ol_uid","String","$99c451a8f3a342be$var$ua","navigator","userAgent","toLowerCase","$99c451a8f3a342be$export$8442bdfd18b7b8a6","indexOf","$99c451a8f3a342be$export$39dfd62a25e0fe93","$99c451a8f3a342be$export$76c0a3b101d93136","$99c451a8f3a342be$export$6b83a0446fc26f94","devicePixelRatio","$99c451a8f3a342be$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$99c451a8f3a342be$export$716f8695eedb9bad","Image","decode","$99c451a8f3a342be$export$f751ce96c6c4e4fc","passive","options","Object","defineProperty","get","window","addEventListener","removeEventListener","error","$fd13f757eac3111d$export$2e2bcd8739ae039","_super","AssertionError","code","_this","message","split","call","name","$fd13f757eac3111d$var$__extends","$da6ccef7b54a0e98$export$a7a9523472993e97","assertion","errorCode","$fd13f757eac3111d$exports","default","$eb21d0233123df66$var$transformStringDiv","$eb21d0233123df66$export$5635d7ef4b8fee1c","transform","coordinate","x","y","$eb21d0233123df66$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$eb21d0233123df66$export$bd70ea2a93c0fa4","source","mat","det","c","d","e","f","$eb21d0233123df66$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","style","$bc281763950f4ebb$export$2e2bcd8739ae039","$c3c8f54edf3cb4cd$export$2e2bcd8739ae039","$abfdcd01ac76cfc0$export$8aceca7c77505534","coordinates","extent","$abfdcd01ac76cfc0$export$fe201bb3bbe031e9","ii","$abfdcd01ac76cfc0$export$1f820e3920fa5715","$abfdcd01ac76cfc0$export$ab1029bcae9ddb4a","value","opt_extent","$abfdcd01ac76cfc0$export$cbe64c389534206f","dx","dy","$abfdcd01ac76cfc0$export$ac68c24d37ca240f","$abfdcd01ac76cfc0$export$805bdfd6d6690e97","$abfdcd01ac76cfc0$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$abfdcd01ac76cfc0$export$958e3e1a02eac4b6","$abfdcd01ac76cfc0$export$3e2152b047719fa1","$abfdcd01ac76cfc0$export$e9bab7fafb253603","extent1","extent2","$abfdcd01ac76cfc0$export$30570204156ffd18","flatCoordinates","offset","end","stride","$abfdcd01ac76cfc0$export$f1dab130b92b85a9","min","max","$abfdcd01ac76cfc0$export$f9ed8a3d123a08e2","callback","val","$abfdcd01ac76cfc0$export$8d09f5e2e1bf560d","$abfdcd01ac76cfc0$export$e77c1cf70445e168","$abfdcd01ac76cfc0$export$b84fa077c8b05295","$abfdcd01ac76cfc0$export$cb1538b07e6964ff","$abfdcd01ac76cfc0$export$520c40045967cb15","area","$abfdcd01ac76cfc0$export$dd1bc94b04021eeb","$abfdcd01ac76cfc0$export$3c49c185de0c2bfc","$abfdcd01ac76cfc0$export$c08559766941f856","$abfdcd01ac76cfc0$export$c91255cadecfe081","$abfdcd01ac76cfc0$export$a1cfd206661d0801","corner","$abfdcd01ac76cfc0$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$abfdcd01ac76cfc0$export$72209efa88586d42","intersection","$abfdcd01ac76cfc0$export$7b0a31e10bbff018","$abfdcd01ac76cfc0$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$abfdcd01ac76cfc0$var$_boundingExtentXYs","$ee1c0c944f1a71b0$export$7d15b64cf5a3a4c4","$ee1c0c944f1a71b0$export$2e2fd1ad24e4d350","cosh","exp","$ee1c0c944f1a71b0$export$b9fae0bba9d9094d","log2","log","LOG2E","$ee1c0c944f1a71b0$export$251bb0a9cef172e6","t","$ee1c0c944f1a71b0$export$88e6ebb4fe54f538","$ee1c0c944f1a71b0$export$56cb859c01fa134d","angleInRadians","PI","$ee1c0c944f1a71b0$export$cba01ba138429a1d","angleInDegrees","$ee1c0c944f1a71b0$export$ba467bec01d66def","r","$ee1c0c944f1a71b0$export$3a89f8d6f6bf6c9f","$ee1c0c944f1a71b0$export$a81f732198733497","decimals","factor","pow","round","$ee1c0c944f1a71b0$export$a3fe094919f356fd","floor","$ee1c0c944f1a71b0$export$803ce6b71a0a94b2","ceil","$5008b62d188c741a$var$HEX_COLOR_RE_","$5008b62d188c741a$var$NAMED_COLOR_RE_","$5008b62d188c741a$export$590567be997858b6","color","g","undefined","$5008b62d188c741a$export$f84e8e69fd4488a5","$5008b62d188c741a$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$5008b62d188c741a$export$3004f64547af360e","s","hasOwnProperty","key","exec","hasAlpha","parseInt","substr","$5008b62d188c741a$export$a3295358bff77e","slice","map","Number","$5008b62d188c741a$var$fromStringInternal_","$5008b62d188c741a$export$75093a47a9fa838d","$14451903ba2a8d1e$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","src","crossOrigin","$14451903ba2a8d1e$var$getKey","set","setSize","maxCacheSize","$14451903ba2a8d1e$export$747ccdf771a87ab8","$c9e8814a771f7912$export$2e2bcd8739ae039","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$35d628fa6c5cc74f$export$2e2bcd8739ae039","$e28af299112e7488$export$e6e34fd1f2686227","assign","var_sources","TypeError","output","arguments","$e28af299112e7488$export$42ffd38884aecdac","object","property","$e28af299112e7488$export$a5c4301012ad6f07","values","$e28af299112e7488$export$dd1bc94b04021eeb","$b727d73d12b77849$export$2e2bcd8739ae039","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$b727d73d12b77849$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","isString","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","keys","index","splice","$2619f588fc8619a9$export$2e2bcd8739ae039","$abee84539e081be0$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","eventsKey","$abee84539e081be0$export$8d2a95bc11b44725","$abee84539e081be0$export$b0a21c8b3c1c921","$df7e2b926dbd0c6e$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$df7e2b926dbd0c6e$var$__extends","changed","getRevision","len","ol_key","$df7e2b926dbd0c6e$export$b7ef3f8527533384","$b727d73d12b77849$exports","$df7e2b926dbd0c6e$export$2e2bcd8739ae039","$46dfb5edc92d0992$export$cf395d7c4a2d5a17","oldValue","$46dfb5edc92d0992$var$__extends","$46dfb5edc92d0992$export$2e2bcd8739ae039","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","concat","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$df7e2b926dbd0c6e$exports","$4c9f62f7bd6b5a2f$export$2e2bcd8739ae039","$f7c7cb8ebe139960$export$2e2bcd8739ae039","BaseLayer","background_","background","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$f7c7cb8ebe139960$var$__extends","getBackground","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","getOpacity","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","getSourceState","setBackground","opt_background","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$46dfb5edc92d0992$exports","$151a0e3adac70180$export$2e2bcd8739ae039","$63806b7280732415$export$2e2bcd8739ae039","$f0b2db1c879125a8$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$f0b2db1c879125a8$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","render","setMap","handleSourcePropertyChange_","setSource","$f0b2db1c879125a8$var$__extends","array","states","getSource","getRenderSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$f7c7cb8ebe139960$exports","$7a7e38116aed855c$export$e9bab7fafb253603","coordinate1","coordinate2","$7a7e38116aed855c$export$bb628a54ab399bc9","cosAngle","sinAngle","$7a7e38116aed855c$export$24e2b27d1ff0c1d5","projection","opt_sourceExtentWidth","projectionExtent","worldsAway","canWrapX","sourceExtentWidth","$2f81f1a2ac941be7$var$expireIconCache","$2f81f1a2ac941be7$export$2e2bcd8739ae039","MapRenderer","map_","$2f81f1a2ac941be7$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","worldWidth","$7a7e38116aed855c$export$39a9ce3624977b84","offsets","layerStates","numLayers","matches","tmpCoord","i1","j","layer1","$f0b2db1c879125a8$exports","inView","getWrapX","callback_1","order","forEach","m","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$076cde814f96d265$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$076cde814f96d265$var$__extends","$e856d8e14ce7ec69$var$fontRegEx","RegExp","$e856d8e14ce7ec69$var$fontRegExMatchIndex","$e856d8e14ce7ec69$export$5abde8a6aec4a131","fontSpec","match","lineHeight","weight","variant","families","family","$e2d1b10b7c94f291$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$e2d1b10b7c94f291$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$e2d1b10b7c94f291$export$1d0aa160432dfea5","$46055baf9d63a589$export$1d36981fcadac93b","console","warn","$46055baf9d63a589$var$measureFont","$46055baf9d63a589$var$measureContext","$46055baf9d63a589$export$7fdcec604f0b1fa7","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$46055baf9d63a589$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","$46055baf9d63a589$var$measureText","measureText","$2daac471ac0a6bf6$export$2e2bcd8739ae039","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","position","$e856d8e14ce7ec69$export$1afde3d6e16a7b29","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2daac471ac0a6bf6$var$__extends","event_1","$076cde814f96d265$exports","declutterLayers","previousElement","layerIndex","sourceState","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$e2d1b10b7c94f291$export$caeacfe04f52533a","display","getDataAtPixel","$2f81f1a2ac941be7$exports","$494663fc370e6825$export$2e2bcd8739ae039","$2cbf494474ec0cda$var$Property","$2cbf494474ec0cda$export$a87ae6eb2761ec6d","opt_element","opt_index","$2cbf494474ec0cda$var$__extends","$2cbf494474ec0cda$export$2e2bcd8739ae039","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$fba74255b66078d2$export$2f5ff21d758d25a7","$fba74255b66078d2$var$__extends","$fba74255b66078d2$var$Property","$fba74255b66078d2$export$2e2bcd8739ae039","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$2cbf494474ec0cda$exports","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$21b28c69a38de89e$export$2e2bcd8739ae039","MapEvent","$21b28c69a38de89e$var$__extends","$084225c1ce8bfa9f$export$2e2bcd8739ae039","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$084225c1ce8bfa9f$var$__extends","getEventPixel","getCoordinateFromPixel","$21b28c69a38de89e$exports","$7f6d0af70a6f1a35$export$2e2bcd8739ae039","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$0b36545a200731b8$export$2e2bcd8739ae039","$9b1cc94410c9a256$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$9b1cc94410c9a256$var$__extends","emulateClick_","pointerEvent","newEvent1","$084225c1ce8bfa9f$exports","clearTimeout","setTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$4e8ec24004f3cc89$export$2e2bcd8739ae039","$9233cf76286c9b05$export$2e2bcd8739ae039","$651fec93374fb4d1$export$2e2bcd8739ae039","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$8ef4e6f23afa8334$export$2e2bcd8739ae039","$eb5ed943d80ff043$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$eb5ed943d80ff043$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$eb5ed943d80ff043$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$90b2cc3a68bf2847$export$2e2bcd8739ae039","$d5b262b77abfacb3$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$d5b262b77abfacb3$export$1482081eec883108","$d5b262b77abfacb3$export$2e2bcd8739ae039","$191ba3048195eee0$export$2e2bcd8739ae039","$1a864f5aa174236d$export$2e2bcd8739ae039","CENTER","RESOLUTION","ROTATION","$e209cb3acef0bc39$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$3c3c5a2254b9f8cb$export$f3928063e5e96d35","$3c3c5a2254b9f8cb$export$21e6da8a7375dfe8","$3c3c5a2254b9f8cb$export$ae9d6ed80df710e5","$3c3c5a2254b9f8cb$export$d26945d1ad52feeb","tan","$3c3c5a2254b9f8cb$var$EPSG3857Projection","EPSG3857Projection","point","$3c3c5a2254b9f8cb$var$__extends","$3c3c5a2254b9f8cb$export$b508d7ad9a891c1b","$3c3c5a2254b9f8cb$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$3c3c5a2254b9f8cb$export$8c71322ec28ed6b4","atan","$eb0a4a846dcbe309$export$21e6da8a7375dfe8","$eb0a4a846dcbe309$export$1482081eec883108","$eb0a4a846dcbe309$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$eb0a4a846dcbe309$var$__extends","$eb0a4a846dcbe309$export$b508d7ad9a891c1b","$183c3fd2dfe97983$var$cache","$6d0586339d9d915b$var$transforms","$6d0586339d9d915b$export$e16d8520af44a096","destination","sourceCode","destinationCode","$10c2cb22310110a8$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$10c2cb22310110a8$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$a94b287371acf3bd$var$showCoordinateWarning","$a94b287371acf3bd$export$ed949affbc7c4223","opt_disable","$a94b287371acf3bd$export$dd516654c5f598fb","$a94b287371acf3bd$export$83e8ab53904f8022","$a94b287371acf3bd$export$59ae956cd3e343f7","$183c3fd2dfe97983$export$e16d8520af44a096","$a94b287371acf3bd$export$3988ae62b71be9a3","projectionLike","replace","$a94b287371acf3bd$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$a94b287371acf3bd$export$e3c4995a701c26a3","vertices","$a94b287371acf3bd$export$eeb8392580a05a37","projections","$a94b287371acf3bd$export$638ad73f7aafb913","$a94b287371acf3bd$export$549167224996a0fb","defaultCode","$a94b287371acf3bd$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$6d0586339d9d915b$export$3988ae62b71be9a3","$a94b287371acf3bd$export$fce0c6cfca85ed96","$a94b287371acf3bd$export$51186ad6e864892a","$a94b287371acf3bd$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$a94b287371acf3bd$var$userProjection","$a94b287371acf3bd$export$698f563af1ba02a5","$a94b287371acf3bd$export$d4b8ec0b96db1ee2","destProjection","$a94b287371acf3bd$export$494be3a3a25689ca","$67ff1626912e9394$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$67ff1626912e9394$export$f883a24d5edde77c","$34d26979fb8a2f2f$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$34d26979fb8a2f2f$var$getSmoothClampedResolution","$34d26979fb8a2f2f$export$1c4e6da9b4b066fe","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$883082e3bc8ba490$export$e20fbacbb41798b","$883082e3bc8ba490$export$f883a24d5edde77c","$0b373812725d70c5$export$929e5a82286172a6","$0b373812725d70c5$export$57636bb43b1ccbb0","$0b373812725d70c5$export$9b47139b511b56e4","$0b373812725d70c5$export$45db2fc2f15997e7","$3c3c5a2254b9f8cb$exports","PROJECTIONS","$eb0a4a846dcbe309$exports","fromEPSG4326","toEPSG4326","$66d6d4361a75d23e$export$2e2bcd8739ae039","$cd461173ca1a1945$export$b92b2dedcfff79de","opt_dest","dest","$7167feca937f6ddb$var$tmpTransform","$7167feca937f6ddb$export$2e2bcd8739ae039","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$7167feca937f6ddb$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$abfdcd01ac76cfc0$export$6a4fe494c558c238","rotate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$f2c67142d01f4675$export$6af0c1b4a8549a43","layout","$f2c67142d01f4675$export$a3767472617c7861","simpleGeometry","getFlatCoordinates","getStride","$f2c67142d01f4675$export$2e2bcd8739ae039","SimpleGeometry","$f2c67142d01f4675$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$f2c67142d01f4675$var$getLayoutForStride","anchorX","anchorY","k","$cd461173ca1a1945$export$bb628a54ab399bc9","$cd461173ca1a1945$export$dcdf75081b88279d","$cd461173ca1a1945$export$d73ee8ef04f5226a","$7167feca937f6ddb$exports","$191a3429fc2d37dd$var$assignClosest","offset1","offset2","$191a3429fc2d37dd$export$bc2eb611ddf80103","squaredDelta","$191a3429fc2d37dd$export$fbf31c8f2668ed5a","ends","$191a3429fc2d37dd$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$191a3429fc2d37dd$export$5a48a0eefcf14992","$bfbed064dfc4381f$export$5c4daf67e03c190f","$bfbed064dfc4381f$export$47c3746a74384d45","coordinatess","opt_ends","jj","$a4b2dcb34fb0867f$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$a4b2dcb34fb0867f$export$51a0620f7a28532b","$a4b2dcb34fb0867f$export$b84e8d2c4920a0c6","$a4b2dcb34fb0867f$export$60a9904b67f8d51b","simplifiedEnds","$a2b2a94da381f5fa$export$9c0934e4e9c3f61e","opt_coordinates","$a2b2a94da381f5fa$export$cbb9596fc0f40db2","opt_coordinatess","$24745b6f3286b4fa$export$3c5e1905f889266e","twiceArea","$24745b6f3286b4fa$export$7a8ee541dfdf2ed5","$f77bc975b0ff8125$export$2e2bcd8739ae039","LinearRing","maxDelta_","maxDeltaRevision_","$f77bc975b0ff8125$var$__extends","getArea","$f2c67142d01f4675$exports","$b73d34d4ed5d03a4$export$2e2bcd8739ae039","Point","$b73d34d4ed5d03a4$var$__extends","$bfbed064dfc4381f$export$60815ead40ec79ab","$242ad0fc4e2d770c$export$cedabedc7ac0e138","$242ad0fc4e2d770c$export$949a7a3a4b6f34fa","wn","$242ad0fc4e2d770c$export$ae868c0f6acc3355","$5a4aba4de381f469$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$5f83dd40c6f0bd6d$export$40d8d71841a3d779","coordinatesExtent","ret","$85b0193823bca9e9$export$4b80e395e36b5a56","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","$abfdcd01ac76cfc0$export$a6a5a7a461419425","$5f83dd40c6f0bd6d$export$76dcd8f8f83b6ddb","$5f83dd40c6f0bd6d$export$830a0dafbb2ef1c5","$f55cfdb517458c10$export$741858880c96b18c","tmp","$5b63dec0e827173f$export$318f2842ed17e094","edge","$5b63dec0e827173f$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$5b63dec0e827173f$export$b71b604ddfc778c7","$79c45a9a29d72478$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$79c45a9a29d72478$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$b73d34d4ed5d03a4$exports","getLinearRingCount","getLinearRing","$f77bc975b0ff8125$exports","getLinearRings","linearRings","$79c45a9a29d72478$export$2e2bcd8739ae039","$79c45a9a29d72478$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$79c45a9a29d72478$export$c16b671815801c75","$79c45a9a29d72478$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$79c45a9a29d72478$export$87d6a1539a56e47f","getRadius","startAngle","$6b23a8e4a5e1d1d7$var$animationCallback","returnValue","$6b23a8e4a5e1d1d7$export$964345001ee9ac52","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$6b23a8e4a5e1d1d7$export$c68d65f9148da196","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","z","$34d26979fb8a2f2f$export$d65a517690fc4385","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$34d26979fb8a2f2f$export$22ac0f6b219de91a","constraint","$6b23a8e4a5e1d1d7$export$4eeaa08dd550e3c0","theta","opt_tolerance","enableRotation","constrainRotation","$6b23a8e4a5e1d1d7$export$ee75376562060184","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$6b23a8e4a5e1d1d7$var$calculateCenterOn","rotX","rotY","$6b23a8e4a5e1d1d7$export$2e2bcd8739ae039","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$6b23a8e4a5e1d1d7$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","w","h","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","$a94b287371acf3bd$export$96bfd09e2cffb006","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$79c45a9a29d72478$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$ba98311088203489$export$ab1029bcae9ddb4a","num","$ba98311088203489$export$622c471beb1693c7","$ba98311088203489$export$dcdf75081b88279d","$ba98311088203489$export$a71a825ff42fb8e1","$fb7e3afc233fc3fa$var$removeLayerMapProperty","$fba74255b66078d2$exports","$fb7e3afc233fc3fa$var$setLayerMapProperty","$fb7e3afc233fc3fa$export$2e2bcd8739ae039","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$6b23a8e4a5e1d1d7$exports","$fb7e3afc233fc3fa$var$createOptionsInternal","renderComplete_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","$eb5ed943d80ff043$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","$fb7e3afc233fc3fa$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","left","top","getTarget","getTargetElement","getView","getOverlayById","group","getLoadingOrNotReady","ready","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$9b1cc94410c9a256$exports","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","GroupEvent","handleLayerRemove_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","$8a39cf77b2d53223$export$2e2bcd8739ae039","Control","target_","$8a39cf77b2d53223$var$__extends","mapEvent","$8ab9f29516a59032$export$2e2bcd8739ae039","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$8ab9f29516a59032$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$e2d1b10b7c94f291$export$1e1c9bf5a4ffe0d1","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8a39cf77b2d53223$exports","$c03f30cd5beaecd3$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$c03f30cd5beaecd3$var$__extends","resetNorth_","$d49cd6af9e0a9924$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$d49cd6af9e0a9924$var$__extends","zoomByDelta_","currentZoom","newZoom","$13ddc3a56f4bad6c$export$2e2bcd8739ae039","$ccaac2dc1df6f094$export$4c486572e961a974","$ccaac2dc1df6f094$export$ace321ff2a8016ef","$ccaac2dc1df6f094$export$2e2bcd8739ae039","Interaction","setActive","$ccaac2dc1df6f094$var$__extends","active","$b205fe5497501604$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$b205fe5497501604$var$__extends","stopEvent","shiftKey","$ccaac2dc1df6f094$exports","zoomByDelta","$565c9e6ea7c9d7d4$export$e2a20c553f6c85ce","$565c9e6ea7c9d7d4$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$565c9e6ea7c9d7d4$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$565c9e6ea7c9d7d4$var$isPointerDraggingEvent","$b473e0e1ad37e937$export$84bf76cd7afc7469","conditions","pass","$b473e0e1ad37e937$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$b473e0e1ad37e937$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$b473e0e1ad37e937$export$d7ddd398f22d79ef","$b473e0e1ad37e937$export$ba9e5d519bc326ca","$b473e0e1ad37e937$export$1238ad6b5e7fff70","$b473e0e1ad37e937$export$fdc892d0d8fe3bfb","$b473e0e1ad37e937$export$5d31fe68a477cfbb","$b473e0e1ad37e937$export$e5570ca80cd8fd54","tagName","$b473e0e1ad37e937$export$abb7acbfa76bf3c4","pointerType","$b473e0e1ad37e937$export$189f0d593022b199","isPrimary","$fb5834d7417c99b1$var$DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$fb5834d7417c99b1$var$__extends","centroid","$565c9e6ea7c9d7d4$exports","update","$7a7e38116aed855c$export$dcdf75081b88279d","begin","getDistance","getAngle","centerpx","$fb5834d7417c99b1$export$2e2bcd8739ae039","$259cc0bcc4ba3b5b$export$2e2bcd8739ae039","DragRotate","lastAngle_","$259cc0bcc4ba3b5b$var$__extends","$8ec080e4ce12836b$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$8ec080e4ce12836b$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$a96d23941615ae7e$var$DragBoxEventType","$a96d23941615ae7e$export$7053c33c051365ea","$a96d23941615ae7e$var$__extends","$a96d23941615ae7e$export$2e2bcd8739ae039","DragBox","box_","$8ec080e4ce12836b$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$d86a7a436cbcca40$export$2e2bcd8739ae039","DragZoom","out_","out","$d86a7a436cbcca40$var$__extends","$a96d23941615ae7e$exports","$49af3c7234b54e2a$export$2e2bcd8739ae039","$97ea597b13dad155$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$97ea597b13dad155$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$76e318b5af652b47$export$2e2bcd8739ae039","KeyboardZoom","$76e318b5af652b47$var$__extends","charCode","charCodeAt","$37214752e43c53d8$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$fb10707c1eee993f$export$9484bbecc3c49a2e","TRACKPAD","WHEEL","$fb10707c1eee993f$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$fb10707c1eee993f$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$06aaa8862e3481e9$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$06aaa8862e3481e9$var$__extends","rotationDelta","touch0","touch1","$a1ebefb124595d8c$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$a1ebefb124595d8c$var$__extends","scaleDelta","$13ee262594261451$export$2e2bcd8739ae039","Map","$d49cd6af9e0a9924$exports","zoomOptions","$c03f30cd5beaecd3$exports","rotateOptions","attribution","$8ab9f29516a59032$exports","attributionOptions","$73b9d89bc9e8af54$export$ebe90cb607ad99e","altShiftDragRotate","$259cc0bcc4ba3b5b$exports","doubleClickZoom","$b205fe5497501604$exports","zoomDelta","zoomDuration","dragPan","$fb5834d7417c99b1$exports","pinchRotate","$06aaa8862e3481e9$exports","pinchZoom","$a1ebefb124595d8c$exports","keyboard","$97ea597b13dad155$exports","$76e318b5af652b47$exports","mouseWheelZoom","$fb10707c1eee993f$exports","shiftDragZoom","$d86a7a436cbcca40$exports","$17349b493cb54cde$export$ebe90cb607ad99e","$13ee262594261451$var$__extends","$2daac471ac0a6bf6$exports","$fb7e3afc233fc3fa$exports","$2c684e1d90196905$export$2e2bcd8739ae039","$1407c92d2c9892f9$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$1407c92d2c9892f9$var$__extends","getPreload","getUseInterimTilesOnError","$c0b8c17015deb399$export$2e2bcd8739ae039","$aca251f500334df7$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$aca251f500334df7$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","image","imageState","$983a97f953edd0f8$var$pixelContext","$983a97f953edd0f8$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","$983a97f953edd0f8$var$__extends","getImageData","col","row","clearRect","drawImage","err","useContainer","opt_backgroundColor","layerClassName","backgroundColor","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","save","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","pixelContext","pixelCanvas","Uint8Array","$aca251f500334df7$exports","$6d08b369ec7da142$export$2e2bcd8739ae039","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","$6d08b369ec7da142$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","$5840eeb3c118f405$export$2e2bcd8739ae039","ImageBase","$5840eeb3c118f405$var$__extends","getImage","getPixelRatio","$700a312d9dcec86b$export$bc96ecc7c2a50764","loadHandler","errorHandler","img","listening","decoding","loaded","catch","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$700a312d9dcec86b$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$5840eeb3c118f405$exports","$fb1d649f5dc9fc40$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$fb1d649f5dc9fc40$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$700a312d9dcec86b$exports","listenImage","$6d08b369ec7da142$exports","$7b0f94dab4ba133b$var$brokenDiagonalRendering_","$74e3b63d7a29d004$export$2e2bcd8739ae039","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$d103a354345e2a0d$export$ab6c91696bd3263e","imageSmoothingEnabled","msImageSmoothingEnabled","$d103a354345e2a0d$export$75f39f0ce198f93f","$7b0f94dab4ba133b$var$drawTestTriangle","u1","v1","u2","v2","closePath","restore","$7b0f94dab4ba133b$var$verifyBrokenDiagonalRendering","$7b0f94dab4ba133b$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$7b0f94dab4ba133b$export$b3890eb0ae9dca99","triangulation","sources","gutter","opt_renderEdges","opt_interpolate","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$ee1c0c944f1a71b0$export$8240f01c446270e6","$7b0f94dab4ba133b$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$af63e9d6e02dd317$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$7b0f94dab4ba133b$export$16d356211d01f1cc","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$af63e9d6e02dd317$var$__extends","reproject_","getTileSize","leftToLoad_1","state1","sourceListenKey_1","unlistenSources_","$93d8079b2b8dcea6$var$TileRange","TileRange","containsTileRange","equals","getHeight","getWidth","intersects","$93d8079b2b8dcea6$export$958e3e1a02eac4b6","$93d8079b2b8dcea6$export$2e2bcd8739ae039","$63eff3c728b00ef1$export$2e2bcd8739ae039","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$63eff3c728b00ef1$var$__extends","isDrawableTile","tileState","getTile","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","$fb1d649f5dc9fc40$exports","$af63e9d6e02dd317$exports","tileOrigin","getOrigin","tileSize","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getInterpolate","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","$e856d8e14ce7ec69$export$52ec625a6a53b6a6","getTileImage","alpha","alphaChanged","globalAlpha","frameState1","tileSource1","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$983a97f953edd0f8$exports","$bc0e4783f0fab808$export$2e2bcd8739ae039","TileLayer","$bc0e4783f0fab808$var$__extends","$63eff3c728b00ef1$exports","$1407c92d2c9892f9$exports","$2ad1989a97766a72$export$2e2bcd8739ae039","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$32cad2fa1eed16d7$export$958e3e1a02eac4b6","opt_tileCoord","$32cad2fa1eed16d7$export$92d0df0f1d25c63c","$32cad2fa1eed16d7$export$a47fb462a08de82f","$32cad2fa1eed16d7$export$d6af199866bfb566","$2b34767d0f228d08$export$2e2bcd8739ae039","TileCache","$2b34767d0f228d08$var$__extends","pruneExceptNewestZ","$32cad2fa1eed16d7$export$a807b7874eb66454","$3fb0b232ebde0dbb$export$2e2bcd8739ae039","$431049d71663e700$var$adaptAttributions","attributionLike","$431049d71663e700$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","reject","$431049d71663e700$var$__extends","refresh","setAttributions","$eb58e9a2ad14f3c3$var$tmpTileCoord","$eb58e9a2ad14f3c3$export$2e2bcd8739ae039","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","fullTileRanges","$9ec65bd1c03f37da$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$9ec65bd1c03f37da$var$resolutionsFromExtent","$9ec65bd1c03f37da$export$ce88871416242df8","$9ec65bd1c03f37da$export$7b5b6ef8fd55fac4","$9ec65bd1c03f37da$export$a251b12f5601c16f","opt_maxResolution","half","$d46aaa672da83194$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$2b34767d0f228d08$exports","tmpSize","tileOptions","$d46aaa672da83194$var$__extends","getTileCacheForProjection","setKey","getTileGrid","getTileCoordForTileUrlFunction","opt_projection","$9ec65bd1c03f37da$export$39a9ce3624977b84","$32cad2fa1eed16d7$export$60bedf8e3e3c3dbe","$431049d71663e700$exports","$d46aaa672da83194$export$c571855c51e6c4b6","$d46aaa672da83194$export$2e2bcd8739ae039","$95d0bd82cdb7ca67$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$95d0bd82cdb7ca67$export$436f44dbcc31fea3","templates","tileUrlFunctions","$95d0bd82cdb7ca67$export$4229b1d9af69b3be","$98a3dcd420991333$export$2e2bcd8739ae039","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$98a3dcd420991333$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$d46aaa672da83194$exports","TileSourceEvent","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","fromCharCode","stop_1","$95d0bd82cdb7ca67$export$2a1fa079bfd73dde","$dace793068b1dd85$var$TileImage","TileImage","imageSmoothing","$dace793068b1dd85$var$defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","$dace793068b1dd85$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","pixelRatio1","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$98a3dcd420991333$exports","imageTile","$dace793068b1dd85$export$2e2bcd8739ae039","$90e2da805a0db680$export$2e2bcd8739ae039","XYZ","xyzOptions","gridOptions","$9ec65bd1c03f37da$export$38500bbeccc864ff","$90e2da805a0db680$var$__extends","$dace793068b1dd85$exports","$a959499010996012$export$4de8a5e77eb994ad","$a959499010996012$export$2e2bcd8739ae039","OSM","$a959499010996012$var$__extends","$90e2da805a0db680$exports","$c140e2fdacd9ce7e$export$2e2bcd8739ae039","$ab8a013fc5e96f1f$export$c202e3cb8db99a95","uri","params","keyParams","encodeURIComponent","qs","$1dc61ca41c125642$export$2e2bcd8739ae039","TileWMS","transparent","params_","v13_","serverType_","serverType","hidpi_","hidpi","updateV13_","getKeyForParams_","$1dc61ca41c125642$var$__extends","getFeatureInfoUrl","projectionObj","sourceProjectionObj","tileExtent","baseParams","SERVICE","VERSION","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getLegendUrl","LAYERS","mpu","getParams","dpi","bbox","updateParams","version","s1","s2","n1","n2","$8479455c5f1ac048$export$66e1c0999abad646","$58b86cdaeedb9239$var$layers","$bc0e4783f0fab808$exports","$a959499010996012$exports","$1dc61ca41c125642$exports","$58b86cdaeedb9239$var$map","$13ee262594261451$exports"],"version":3,"file":"index.2f15aed9.js.map"}